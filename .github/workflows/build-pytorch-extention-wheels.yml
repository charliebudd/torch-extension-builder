name: Build PyTorch Extention Wheels

on:
  workflow_call:
    inputs:
      working-directory:
        type: string
        default: "."
      build-command:
        type: string
        default: "python setup.py bdist_wheel"
      python-versions:
        type: string
        default: "[3.6, 3.7, 3.8]"
      pytorch-versions:
        type: string
        default: "[1.9, '1.10', 1.11]"
      cuda-versions:
        type: string
        default: "[10.2, 11.3]"
      image-repo:
        type: string
        default: "manylinux"

jobs:
  build-wheels:
    name: Build Wheels
    runs-on: ubuntu-latest
    container: docker://torchextentionbuilder/${{ matrix.image-repo }}:py${{ matrix.python }}-pt${{ matrix.pytorch }}-cu${{ matrix.cuda }}-${GITHUB_REF/refs\/tags\//}
    strategy:
      fail-fast: false
      matrix:
        python: ${{ fromJson(inputs.python-versions) }}
        pytorch: ${{ fromJson(inputs.pytorch-versions) }}
        cuda: ${{ fromJson(inputs.cuda-versions) }}
      exclude:
        - pytorch: 1.9
          cuda: 11.3 
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build Wheels
        working-directory: ${{ inputs.working-directory }}
        run: ${{ inputs.build-command }}
        
      - name: Repair Wheels
        working-directory: ${{ inputs.working-directory }}
        run: auditwheel repair dist/*.whl --plat manylinux_2_17_x86_64 --only-plat
        
      - name: Patch Wheels
        working-directory: ${{ inputs.working-directory }}
        run: python /torch_extention_builder/patch_wheels.py wheelhouse/*manylinux*.whl

      - name: Cache Patched Wheels
        uses: actions/upload-artifact@v3
        with:
          path: ${{ inputs.working-directory }}/patched_wheels
          name: py${{ matrix.python }}-wheels
          retention-days: 1
          
      - name: Cache Script
        uses: actions/upload-artifact@v3
        with:
          path: /torch_extention_builder
          name: scripts
          retention-days: 1
  
  combine-wheels:
    name: Combine Wheels
    needs: build-wheels
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ${{ fromJson(inputs.python-versions) }}

    steps:
      - name: Download Patched Wheels
        uses: actions/download-artifact@v3
        with:
          name: py${{ matrix.python }}-wheels
          path: patched_wheels
        
      - name: Download Script
        uses: actions/download-artifact@v3
        with:
          name: scripts

      - name: Combine Wheels
        run: python combine_wheels.py patched_wheels/*
        
      - name: Cache Final Wheels
        uses: actions/upload-artifact@v3
        with:
          path: combined_wheels
          name: final-wheels
          retention-days: 1
