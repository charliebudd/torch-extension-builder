name: Win Test

on: push

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.get-tag.outputs.image-tag }}
    steps:
      - name: Get Tag
        id: get-tag
        run: |
          if [[ $TAG == main ]] || [[ $TAG =~ v[0-9] ]]; then
              echo "::set-output name=image-tag::-$TAG"
          else
              echo "::set-output name=image-tag::"
          fi
        env:
          TAG: ${{ github.ref_name }}
  build-images:
    name: Build Images
    needs: setup
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        pytorch-version: [1.9, '1.10', 1.11]
        cuda-version: [10.2, 11.3]
        include:
          - cuda-version: 10.2
            cuda-arch-list: "3.7 5.0 6.0 6.1 6.2 7.0 7.2 7.5+PTX"
          - cuda-version: 11.3
            cuda-arch-list: "3.7 5.0 6.0 6.1 6.2 7.0 7.2 7.5 8.0 8.6+PTX"
        exclude:
          - pytorch-version: 1.9
            cuda-version: 11.3 
          - python-version: 3.6
            pytorch-version: 1.11
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: DockerHub Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build image and push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          build-args: |
            PYTHON_VERSION=${{ matrix.python-version }}
            PYTORCH_VERSION=${{ matrix.pytorch-version }}
            CUDA_VERSION=${{ matrix.cuda-version }}
            CUDA_ARCH_LIST=${{ matrix.cuda-arch-list }}
          context: ./windows
          tags: torchextensionbuilder/windows:py${{ matrix.python-version }}-pt${{ matrix.pytorch-version }}-cu${{ matrix.cuda-version }}${{needs.setup.outputs.image-tag}}
          push: true
  
  build-wheels:
    name: Build Wheels
    needs: [setup, build-images]
    runs-on: ubuntu-latest
    container: 
      image: docker://torchextensionbuilder/windows:py${{ matrix.python-version }}-pt${{ matrix.pytorch-version }}-cu${{ matrix.cuda-version }}${{needs.setup.outputs.image-tag}}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        pytorch-version: [1.9, '1.10', 1.11]
        cuda-version: [10.2, 11.3]
        exclude:
          - pytorch-version: 1.9
            cuda-version: 11.3 
          - python-version: 3.6
            pytorch-version: 1.11
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build Wheels
        working-directory: test_extention
        run: python setup.py install
